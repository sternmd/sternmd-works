"use strict";$(function(){$(".yinyang").on("click",function(e){e.preventDefault(),$("body").toggleClass("invert")})}),$(function(){$("html").niceScroll(),$(this).scrollTop(0);var a=$("#projects").offset().top-50;$(window).scroll(function(){var e=$(window).scrollTop(),t=$(".arrow");a<e?t.addClass("down").find("a").attr("href","#hero"):t.removeClass("down").find("a").attr("href","#projects")}),$('a[href*="#"]').not('[href="#"]').not('[href="#0"]').click(function(e){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);(t=t.length?t:$("[name="+this.hash.slice(1)+"]")).length&&(e.preventDefault(),$("html, body").animate({scrollTop:t.offset().top},1e3,function(){var e=$(t);if(e.focus(),e.is(":focus"))return!1;e.attr("tabindex","-1"),e.focus()}))}})}),$(function(){window.onload=function(){var e=new TimelineLite,t=$(".gradient"),a=$("#circle svg, .yinyang"),o=$(".title"),s=($(".subtitle"),$(".title, .subtitle, #about, .arrow")),n=$(".burger-check, .burger"),i=$("html, body");TweenLite.to(o,.25,{height:0,paused:!0,reversed:!0});TweenLite.delayedCall(.5,function(){e.set(n,{className:"+=no-click"}).set(a,{className:"+=no-click"}).set(i,{className:"+=no-scroll"}).to(t,1,{height:"100%",ease:Quad.easeInOut}).to(a,.75,{opacity:1,ease:Quad.easeIn}).to(a,.5,{ease:Quad.easeIn,delay:1}).to(s,.25,{opacity:1,ease:Quad.easeIn}).to(t,.75,{height:12,ease:Quad.easeInOut}).to(n,.5,{opacity:1,ease:Quad.easeIn}).set(n,{className:"-=no-click"}).set(i,{className:"-=no-scroll"}).set(a,{className:"-=no-click"})})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
